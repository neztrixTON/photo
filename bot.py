import os
import logging
import telebot
import requests
from bs4 import BeautifulSoup
from urllib.parse import quote_plus

# ==== –ù–ê–°–¢–†–û–ô–ö–ò ====
BOT_TOKEN = '8037946874:AAFt8VjAfy-UpTXF-XoJUYPiNlC7B-btUms'  # –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(BOT_TOKEN)

# ==== –õ–û–ì–ò ====
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# ==== –•–≠–î–ï–†–´ ====
HEADERS = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 '
                  '(KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',
    'Accept-Language': 'ru-RU,ru;q=0.9',
}

# ==== –ü–û–õ–£–ß–ò–¢–¨ CBIR ID ====
def get_cbir_id(image_bytes):
    files = {
        'upfile': ('image.jpg', image_bytes, 'image/jpeg')
    }
    response = requests.post('https://yandex.ru/images/search', files=files, headers=HEADERS, allow_redirects=False)
    location = response.headers.get('Location')
    if not location or 'cbir_id=' not in location:
        return None
    return location.split('cbir_id=')[1].split('&')[0]

# ==== –ü–û–õ–£–ß–ò–¢–¨ –°–°–´–õ–ö–ò ====
def parse_sites_links(cbir_id, image_url):
    cbir_url = (
        f'https://yandex.ru/images/search?cbir_id={quote_plus(cbir_id)}'
        f'&rpt=imageview&url={quote_plus(image_url)}&cbir_page=sites'
    )
    logger.info(f'Searching URL: {cbir_url}')

    response = requests.get(cbir_url, headers=HEADERS)
    if response.status_code != 200:
        logger.error(f"Failed to get page: {response.status_code}")
        return []

    soup = BeautifulSoup(response.text, 'html.parser')
    links = []
    for item in soup.select('.CbirSites-ItemInfo a.Link_view_outer'):
        href = item.get('href')
        if href and href.startswith('http'):
            links.append(href)

    return links

# ==== –û–ë–†–ê–ë–û–¢–ß–ò–ö –§–û–¢–û ====
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    try:
        file_id = message.photo[-1].file_id
        file_info = bot.get_file(file_id)
        file_url = f'https://api.telegram.org/file/bot{BOT_TOKEN}/{file_info.file_path}'
        image_bytes = requests.get(file_url).content

        cbir_id = get_cbir_id(image_bytes)
        if not cbir_id:
            bot.reply_to(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å cbir_id –æ—Ç –Ø–Ω–¥–µ–∫—Å–∞.")
            return

        image_url = f"https://avatars.mds.yandex.net/get-images-cbir/{cbir_id}/orig"
        links = parse_sites_links(cbir_id, image_url)

        if not links:
            bot.reply_to(message, "‚ö†Ô∏è –ü–æ –≤–∞—à–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é —Å—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        else:
            bot.reply_to(message, "üîó –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:\n\n" + "\n".join(links))

    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ")
        bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

# ==== –°–¢–ê–†–¢ ====
@bot.message_handler(commands=['start', 'help'])
def handle_start(message):
    bot.reply_to(message, "üëã –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ —è –Ω–∞–π–¥—É —Å–∞–π—Ç—ã, –≥–¥–µ –æ–Ω–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è.")

# ==== –ó–ê–ü–£–°–ö ====
if __name__ == '__main__':
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()
